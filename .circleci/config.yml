version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  aws-ecr: circleci/aws-ecr@8.1.2
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  lint:
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - run:
          name: Run ESLint
          command: |
            yarn
            yarn lint

  deploy:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      aws-region:
        description: AWS region
        type: string
      cluster-name:
        description: AWS EKS cluster name
        type: string
      image-url:
        description: Docker image URL
        type: string
    steps:
      - checkout
      - run:
          name: Update image URL in deployment config
          command: |
            sed -i "s|IMAGE_URL|<< parameters.image-url >>|g" k8s/deployment.yml
      - aws-eks/update-kubeconfig-with-authenticator:
          aws-region: << parameters.aws-region >>
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: "k8s/deployment.yml"
          resource-name: deployment/next-app
          get-rollout-status: true
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: "k8s/service.yml"
          show-kubectl-command: true

  test:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      aws-region:
        description: AWS region
        type: string
      cluster-name:
        description: AWS EKS cluster name
        type: string
      expected-version:
        description: Expected version to verify the new app is deployed
        type: string
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: << parameters.aws-region >>
      - run:
          name: Test new version is deployed
          command: |
            EXTERNAL_IP=$(kubectl get service next-app | awk '{print $4}' | tail -n1)
            echo "EXTERNAL_IP: ${EXTERNAL_IP}"
            echo "Expected version: << parameters.expected-version >>"
            result=$(curl -s "http://${EXTERNAL_IP}" | grep "<< parameters.expected-version >>")
            if [ -z "$result" ]
            then
              exit 1
            else
              exit 0
            fi

workflows:
  deployment:
    jobs:
      - lint
      - aws-ecr/build-and-push-image:
          name: build-and-push-image
          extra-build-args: |
            --build-arg VERSION_HASH="${CIRCLE_SHA1:0:7}" \
          tag: "${CIRCLE_SHA1:0:7}"
          region: "${AWS_DEFAULT_REGION}"
          repo: next-app
          requires:
            - lint
      - deploy:
          aws-region: "${AWS_DEFAULT_REGION}"
          cluster-name: next-app
          image-url: "${AWS_ECR_REGISTRY_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/next-app:${CIRCLE_SHA1:0:7}"
          requires:
            - build-and-push-image
      - test:
          aws-region: "${AWS_DEFAULT_REGION}"
          cluster-name: next-app
          expected-version: "${CIRCLE_SHA1:0:7}"
          requires:
            - deploy
